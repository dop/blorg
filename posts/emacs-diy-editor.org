#+TITLE: Emacs
#+SUBTITLE: DIY Editor
#+AUTHOR: Donatas Petrauskas
#+OPTIONS: num:nil

/Reading time: depends./

#+BEGIN_QUOTE
yjftsjthsd-h 9 months ago [-]

Hasn't the goal of emacs always been to be everything? It can be init (1), a web browser (2), and already a X11 WM (3).
(1) http://www.informatimago.com/linux/emacs-on-user-mode-linux....
(2) https://www.emacswiki.org/emacs/CategoryWebBrowser
(3) https://www.emacswiki.org/emacs/XWindowEmacsManager
#+END_QUOTE

* Introduction
#+BEGIN_QUOTE
How do you know that person uses Emacs? Don't worry, they will tell you.
#+END_QUOTE

Which text editor is the best?

I'm going to do something unimaginable and say that, in my opinion, VIM is the
best text editor. Why? I'm sold on it's elegance. Just few commands, each bound
to a particular key, can perform complex text manipulations when used in various
combinations. Moreover, many commands are bound to mnemonically appropriate
keys, for example, =ci"= means "change inside double quotes", and =dt.= means
"delete till period". Isn't that beautiful?

You might be wondering why I'm starting with VIM. Isn't this article about
Emacs? Am I, by giving so much attention to VIM, being defensive and admitting
defeat? Surely, if Emacs was so good I would never even had any reason to learn
anything about VIM. I have simple explanation for that.

* I Did It My Way
#+BEGIN_QUOTE
Keep your friends close, and your enemies closer.
#+END_QUOTE

VIM was my first editor love. I was editing configuration files, writing small
programs for university. It was more than enough. It was entertaining in a way.

Switch to Emacs was anticlimactic. I was writing a paper in LaTeX and my
mentoring professor suggested to try Emacs. It had some features out of the box
to complete and indent all that weird TeX markup. And the rest is history.

Switching wasn't complicated. It was like going to simple text editor with ugly
GUI. What made a good impression on me was great indentation for all programming
languages I used at the time. Some of key bindings were weird, but I was already
hardened by VIM usage, so learning something strange and new did not scare me.

You might be asking, if it's just another editor, why switch? More so, because
I've already admitted that VIM is better at text manipulation. That is true. The
thing is, Emacs is not a text editor.

* A Text Editor It is Not
Like vi, or VIM, Emacs is not just a particular piece of software. It's a
philosophy, a family, a way of life. If former is widely known for it's modal
nature, efficient text navigation and editing, Emacs is praised for
extensibility. It's not just text editor, and I mean it not in a sentimental,
cliché way. By now Emacs has moved beyond text editing. It can be your email
client, web browser, or even window manager. I'm not saying that it should be,
but it could. I myself I'm using it mostly to write software or prose. Emacs is
extensible, programmable system. Emacs Lisp machine[fn:1], if you will, with
rich text display as primary interface. Recent popularity in extensible editors
like Atom and Visual Studio Code solidifies my belief that Emacs way is the
right approach. Or inevitable outcome[fn:2].

#+BEGIN_QUOTE
Multics Emacs proved to be a great success — programming new editing commands
was so convenient that even the secretaries in his office started learning how
to use it. They used a manual someone had written which showed how to extend
Emacs, but didn't say it was a programming. So the secretaries, who believed
they couldn't do programming, weren't scared off. They read the manual,
discovered they could do useful things and they learned to program.

- https://www.gnu.org/gnu/rms-lisp.en.html
#+END_QUOTE

# * Long Time Ago, Far Far Away
# Emacs is older than I am. It was initially released way before my parents even
# met behind the Iron curtain. It's so old that some describe using it as doing
# software archaeology. It's so old that default configuration makes very little
# sense today. And yet it's still widely used and actively developed.

* Footnotes

[fn:2] See Zawinski's Law of Software Envelopment.

[fn:1] Good explanation of why it's not really a Lisp machine: https://news.ycombinator.com/item?id=16452534.

